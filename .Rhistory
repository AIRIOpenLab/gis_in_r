#########################
## clear workspace
## load R libraries
#########################
rm(list=ls())
library(car)
library(ggplot2)
library(reshape)
library(survey)
#########################
## Import CSV file from Qualtrics
## The file has two lines of string headers
#########################
df.raw = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=0,head=T)
varnames = names(df.raw)
df.raw2 = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=2,head=F)
names(df.raw2)=varnames
#########################
## Subset Data
## Only rows where zip code and newspaper was returned and completed survey
#########################
df = subset(df.raw2,Q168==2&df.raw2$Q711_1_TEXT!=""&df.raw2$Q312_2!=""&df.raw2$Q326_2!=""&df.raw2$Q341_2!=""&df.raw2$demPolIdeo>=1)
df$id = seq(1,nrow(df))
#########################
## Recode variables for weighting
#########################
## Age Seven Part
df$demAge7 = rep(NA,dim(df)[1])
df$demAge7[df$demAgeFull<=8]<-1 #18-24
df$demAge7[df$demAgeFull>=9&df$demAgeFull<=18]<-2 #25-34
df$demAge7[df$demAgeFull>=19&df$demAgeFull<=28]<-3 #35-44
df$demAge7[df$demAgeFull>=29&df$demAgeFull<=38]<-4 #45-54
df$demAge7[df$demAgeFull>=39&df$demAgeFull<=48]<-5 #55-64
df$demAge7[df$demAgeFull>=49&df$demAgeFull<=58]<-6 #65-74
df$demAge7[df$demAgeFull>=59]<-7 #75+
levels(df$demAge7) = c("18-24","25-34","35-44","45-54","55-64","65-74","75+")
## Age Four Part
df$demAge = rep(NA,dim(df)[1])
df$demAge[df$demAgeFull<=13]<-1
df$demAge[df$demAgeFull>=14&df$demAgeFull<=28]<-2
df$demAge[df$demAgeFull>=29&df$demAgeFull<=48]<-3
df$demAge[df$demAgeFull>=49]<-4
#levels(df$demAge) = c("18-29","30-44","45-64","65+")
## Use five part age - lths, HS grad, Some Coll, Coll Grad, Post+
df$demEduc5 = rep(NA,dim(df)[1])
df$demEduc5[df$demEduFull==1] =1
df$demEduc5[df$demEduFull==2] =4
df$demEduc5[df$demEduFull==3] =3
df$demEduc5[df$demEduFull==4] =2
df$demEduc5[df$demEduFull==5] =3
df$demEduc5[df$demEduFull==6] =5
df$demEduc5[df$demEduFull==7] =3
df$demEduc5[df$demEduFull==8] =5
df$demEduc5[df$demEduFull==10] =1
levels(df$demEduc5) = c("LTHS","HS grad","Some College","College Grad","Postgraduate")
## Census Nine Divisions (http://en.wikipedia.org/wiki/List_of_regions_of_the_United_States#Census_Bureau-designated_areas)
df$demDiv9<-rep(NA,dim(df)[1]) #four regions - northeast, midwest, south, west
df$demDiv9[df$demState %in% c(20,30,46,22,40,7)]<-1
df$demDiv9[df$demState %in% c(33,39,31)]<-2
df$demDiv9[df$demState %in% c(50,23,14,15,36)]<-3
df$demDiv9[df$demState %in% c(26,35,42,28,24,17,16)]<-4
df$demDiv9[df$demState %in% c(8,9,21,47,49,41,34,10,11)]<-5
df$demDiv9[df$demState %in% c(18,43,25,1)]<-6
df$demDiv9[df$demState %in% c(4,19,37,44)]<-7
df$demDiv9[df$demState %in% c(13,27,51,29,45,6,3,32)]<-8
df$demDiv9[df$demState %in% c(2,48,38,12,5)]<-9
levels(df$demDiv9)=c("New England","Mid-Atlantic","East North Central","West North Central",
"South Atlantic","East South Central","West South Central","Mountain","Pacific")
#########################
## Append post-stratification weights to the data frame
#########################
source("http://dl.dropboxusercontent.com/u/24660992/conjoint/post_stratify_data.R")
#########################
## stack data frames
## 6 rows per respondent (2 candidates x 3 vignettes)
#########################
cols1 = df[,c("Q711_1_TEXT","Q308",grep("Q312",names(df),value=TRUE)[2:6],"Q309_1","Q310_1","Q311_1")]
cols2 = df[,c("Q711_2_TEXT","Q308",grep("Q312",names(df),value=TRUE)[8:12],"Q316_1","Q317_1","Q318_1")]
cols3 = df[,c("Q711_3_TEXT","Q322",grep("Q326",names(df),value=TRUE)[2:6],"Q328_1","Q329_1","Q330_1")]
cols4 = df[,c("Q711_4_TEXT","Q322",grep("Q326",names(df),value=TRUE)[8:12],"Q335_1","Q336_1","Q337_1")]
cols5 = df[,c("Q711_5_TEXT","Q340",grep("Q341",names(df),value=TRUE)[2:6],"Q344_1","Q345_1","Q346_1")]
cols6 = df[,c("Q711_6_TEXT","Q340",grep("Q341",names(df),value=TRUE)[8:12],"Q349_1","Q350_1","Q351_1")]
## vote selection variable
cols1$selected = ifelse(cols1$Q308==1,1,0)
cols2$selected = ifelse(cols2$Q308==2,1,0)
cols3$selected = ifelse(cols3$Q322==1,1,0)
cols4$selected = ifelse(cols4$Q322==2,1,0)
cols5$selected = ifelse(cols5$Q340==1,1,0)
cols6$selected = ifelse(cols6$Q340==2,1,0)
#########################
## standardize names
#########################
names(cols1) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
names(cols2) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
names(cols3) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
names(cols4) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
names(cols5) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
names(cols6) = c("name","vote","weapons","abortion","occupation","endorse","party","support","qualified","ideology","selected")
#########################
## newspaper perceptions, policy, demographics
#########################
bkgd = df[,c(grep("^dem",names(df)),  #demos
grep("^Q305_[1-7]$",names(df)),   #elite perceptions ideology
grep("^Q303",names(df)),   #elite perceptions bias
grep("^Q149",names(df)),   # policy qs - general
grep("^Q303",names(df)),   # policy qs - general
grep("Q304",names(df)),
grep("Q201",names(df)),
grep("Q202",names(df))
)]
stack = cbind(rbind(cols1,cols2,cols3,cols4,cols5,cols6),rbind(bkgd,bkgd,bkgd,bkgd,bkgd,bkgd))
stack$paperPoss = rep(df$zip.newspaper_name2,6)
## recode variables
stack$endorseBin = ifelse(stack$endorse=="",0,1)  #indicator (1=endorse, 0 = no endorse)
stack$ideoDist = abs(stack$Q305_4-stack$demPolIdeo)
stack$ideoDistNotAbs = (stack$Q305_4-stack$demPolIdeo)
stack$ideoPolicy = recode(stack$Q149_1,"1=0;2=1")+recode(stack$Q149_2,"1=0;2=1")+recode(stack$Q149_3,"1=0;2=1")+recode(stack$Q149_4,"1=1;2=0")+recode(stack$Q149_5,"1=0;2=1")+recode(stack$Q149_6,"1=0;2=1")+recode(stack$Q304,"1=0;2=1")
stack$qualHi = ifelse(stack$qualified>=5,1,0)
stack$ideolHi = ifelse(stack$ideology>=5,1,0)
stack$suppHi = ifelse(stack$support>=5,1,0)
stack$qualLo = ifelse(stack$qualified<=3,1,0)
stack$ideoLo = ifelse(stack$ideology<=3,1,0)
stack$suppLo = ifelse(stack$support<=3,1,0)
## Respondent ID
stack$resp_id = rep(seq(1,nrow(df),1),6)
## Vignette ID - this is the number of the choice set
stack$vignette_id = rep(1:3,each=nrow(stack)/3)
## Respondent - Vignette ID
stack$resp_vignette_id = paste(stack$resp_id,stack$vignette_id,sep="")
stack$resp_vignette_id = as.numeric(as.character(stack$resp_vignette_id))
#########################
#########################
## Run Models
## weighted and unweighted
#########################
#########################
## 1
## Main effects
summary(lm(selected~weapons+abortion+occupation+party
+demAge+factor(demRace)+demHisp+demGender+factor(demEduFull)
+factor(paperPoss)+factor(vignette_id)
+endorseBin,
data=stack))
rm(list=ls())
library(car)
library(ggplot2)
library(reshape)
library(survey)
install_packages('car', dep=T)
install_package('car', dep=T)
install.packages('car', dep=T)
install.packages('ggplot', dep=T)
install.packages('reshape', dep=T)
install.packages('survey', dep=T)
library(car)
library(ggplot2)
library(reshape)
library(survey)
install.packages('ggplot2', dep=T)
library(car)
library(ggplot2)
library(reshape)
library(survey)
#########################
## Import CSV file from Qualtrics
## The file has two lines of string headers
#########################
df.raw = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=0,head=T)
varnames = names(df.raw)
df.raw2 = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=2,head=F)
names(df.raw2)=varnames
#########################
## Subset Data
## Only rows where zip code and newspaper was returned and completed survey
#########################
df = subset(df.raw2,Q168==2&df.raw2$Q711_1_TEXT!=""&df.raw2$Q312_2!=""&df.raw2$Q326_2!=""&df.raw2$Q341_2!=""&df.raw2$demPolIdeo>=1)
df$id = seq(1,nrow(df))
#########################
## Recode variables for weighting
#########################
## Age Seven Part
df$demAge7 = rep(NA,dim(df)[1])
df$demAge7[df$demAgeFull<=8]<-1 #18-24
df$demAge7[df$demAgeFull>=9&df$demAgeFull<=18]<-2 #25-34
df$demAge7[df$demAgeFull>=19&df$demAgeFull<=28]<-3 #35-44
df$demAge7[df$demAgeFull>=29&df$demAgeFull<=38]<-4 #45-54
df$demAge7[df$demAgeFull>=39&df$demAgeFull<=48]<-5 #55-64
df$demAge7[df$demAgeFull>=49&df$demAgeFull<=58]<-6 #65-74
df$demAge7[df$demAgeFull>=59]<-7 #75+
levels(df$demAge7) = c("18-24","25-34","35-44","45-54","55-64","65-74","75+")
## Age Four Part
df$demAge = rep(NA,dim(df)[1])
df$demAge[df$demAgeFull<=13]<-1
df$demAge[df$demAgeFull>=14&df$demAgeFull<=28]<-2
df$demAge[df$demAgeFull>=29&df$demAgeFull<=48]<-3
df$demAge[df$demAgeFull>=49]<-4
#levels(df$demAge) = c("18-29","30-44","45-64","65+")
## Use five part age - lths, HS grad, Some Coll, Coll Grad, Post+
df$demEduc5 = rep(NA,dim(df)[1])
df$demEduc5[df$demEduFull==1] =1
df$demEduc5[df$demEduFull==2] =4
df$demEduc5[df$demEduFull==3] =3
df$demEduc5[df$demEduFull==4] =2
df$demEduc5[df$demEduFull==5] =3
df$demEduc5[df$demEduFull==6] =5
df$demEduc5[df$demEduFull==7] =3
df$demEduc5[df$demEduFull==8] =5
df$demEduc5[df$demEduFull==10] =1
levels(df$demEduc5) = c("LTHS","HS grad","Some College","College Grad","Postgraduate")
## Census Nine Divisions (http://en.wikipedia.org/wiki/List_of_regions_of_the_United_States#Census_Bureau-designated_areas)
df$demDiv9<-rep(NA,dim(df)[1]) #four regions - northeast, midwest, south, west
df$demDiv9[df$demState %in% c(20,30,46,22,40,7)]<-1
df$demDiv9[df$demState %in% c(33,39,31)]<-2
df$demDiv9[df$demState %in% c(50,23,14,15,36)]<-3
df$demDiv9[df$demState %in% c(26,35,42,28,24,17,16)]<-4
df$demDiv9[df$demState %in% c(8,9,21,47,49,41,34,10,11)]<-5
df$demDiv9[df$demState %in% c(18,43,25,1)]<-6
df$demDiv9[df$demState %in% c(4,19,37,44)]<-7
df$demDiv9[df$demState %in% c(13,27,51,29,45,6,3,32)]<-8
df$demDiv9[df$demState %in% c(2,48,38,12,5)]<-9
levels(df$demDiv9)=c("New England","Mid-Atlantic","East North Central","West North Central",
"South Atlantic","East South Central","West South Central","Mountain","Pacific")
df.raw = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=0,head=T)
varnames = names(df.raw)
df.raw2 = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=2,head=F)
names(df.raw2)=varnames
df.raw = read.csv("http://dl.dropboxusercontent.com/u/24660992/conjoint/data_feb_survey.csv",skip=0,head=T)
df.raw = read.csv("~/desktop/test.csv",skip=0,head=T)
View(df.raw)
View(df.raw)
df[df$col1==""]
df[col1==""]
df[which(df$col1=='']
df[which(df$col1=='')]
df = read.csv("~/desktop/test.csv",skip=0,head=T)
df[which(df$col1=='')]
df
df[which(df$col1=="")]
is.na("")
install.packages(c("sp", "raster"))
library (rgdal)
install.packages("~/Desktop/rgdal_0.9-1.tgz", repos=NULL)
install.packages("~/Desktop/rgdal_0.9-1.tgz", repos=NULL)
library (rgdal)
runif(20)
runif?
()
help(runif)
xy.sp <- SpatialPoints(xy)  # ..converted into a spatial object
xy <- matrix(runif(20), ncol = 2)  # a matrix with some arbitrary points as coordinates..
xy.sp <- SpatialPoints(xy)  # ..converted into a spatial object
plot(xy.sp, pch = 2)
xy
attributes(xy.sp)
xy.sp@proj4string
summary(xy.sp)
df <- data.frame(attr1 = LETTERS[1:10], attr2 = c(10:1))
df
c(10:1)
xy.spdf <- SpatialPointsDataFrame(xy.sp, df)
xy.spdf
attributes(xy.spdf)
dirname()
sys.frame
sys.frame(1)
getSrcDirectory(function(x) {x})
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
p
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
this.dir <- dirname(parent.frame(2)$ofile)
parent.frame
parent.frame(2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gtopo <- GridTopology(cellcentre.offset=c(0,0), cellsize=c(1,1), cells.dim=c(5,5)) # specify the grid topology
datafr <- data.frame(1:25) # make up some data
SpGdf <- SpatialGridDataFrame(gtopo, datafr) # create the grid
summary(SpGdf)
spplot(SpGdf, sp.layout = c('sp.points', SpatialPoints(coordinates(SpGdf))))
SpGdf
is.projected(SpGdf)
basic_raster <- raster(ncol=10, nrow=20, xmn=0, xmx=10, ymn=0, ymx=20)
summary(basic_raster)
basic_raster
ncell(basic_raster)
basic_raster <- values(1:200)
plot(basic_raster)
basic_raster <- value(1:200)
plot(basic_raster)
values(basic_raster) <- 1:200
plot(basic_raster)
basic_raster
basic_raster <- raster(ncol=10, nrow=20, xmn=0, xmx=20, ymn=0, ymx=10)
basic_raster
values(basic_raster) <- 1:200
plot(basic_raster)
values(basic_raster) <-  runif(ncell(r))
values(basic_raster) <-  runif(ncell(basic_raster))
plot(basic_raster)
values(basic_raster) <-  1:ncell(basic_raster)
plot(basic_raster)
ncel()
ncell()
basic_raster <- raster(ncol=10, nrow=10, xmn=0, xmx=10, ymn=0, ymx=10)
basic_raster
values(basic_raster) <-  1:ncell(basic_raster)
plot(basic_raster)
basic_raster <- raster(ncol=5, nrow=10, xmn=0, xmx=5, ymn=0, ymx=10)
basic_raster
values(basic_raster) <-  1:ncell(basic_raster)
plot(basic_raster)
resolution?
()
?raster
hasValues(basic_raster)
basic_raster
values(basic_raster)
res(basic_raster)<-c(2,2)
values(basic_raster)
values(basic_raster)<-1:ncell(basic_raster)
values(basic_raster)
res(basic_raster)<-c(1,1)
values(basic_raster)
dim(basic_raster)
sf<-readOGR("~/Desktop/sf_planning_neighborhoods", "planning_neighborhoods")
library(rgdal)
library(c('sp', 'raster'))
library(sp)
library(raster)
sf<-readOGR("~/Desktop/sf_planning_neighborhoods", "planning_neighborhoods")
sf<-readOGR("~/Desktop/sf_neighborhoods", "planning_neighborhoods")
sf<-readOGR(dsn = "~/Desktop/sf_neighborhoods", layer="planning_neighborhoods")
sf<-readOGR(dsn = "/Users/Nick/Desktop/sf_neighborhoods", layer="planning_neighborhoods")
plot(sf)
sf@data
sf2<-readOGR(dsn = "/Users/Nick/Desktop/SanFranciscoIncome", layer="SanFranciscoIncome")
sf2
plot(sf2)
sf2@data
plot(sf)
len(sf2)
dim(sf2)
dim(sf)
sf2<-readOGR(dsn = "/Users/Nick/Desktop/SanFranciscoIncome", layer="SanFranciscoIncome")
library(dplyr)
sf2@data <- sf2@data[,c('Tract2000','MedInc_d', 'pC_Inc_d')]
sf2@data
colnames(sf2@data)
colnames(sf2@data) <-c('Tract2000', 'MedInc_hh', 'MedInc_percap')
?writeOGR
writeOGR(sf2, dsn = "/Users/Nick/Desktop/sf_neighborhoods", layer="planning_neighborhoods")
writeOGR(sf2, dsn = "/Users/Nick/Desktop/sf_neighborhoods", layer="planning_neighborhoods", driver="ESRI Shapefile")
writeOGR(sf2, dsn = "/Users/Nick/Desktop/sf_neighborhoods", layer="sf_incomes", driver="ESRI Shapefile")
colnames(sf2@data) <-c('Tract2000', 'MedIncHH', 'MedIncPerCap')
writeOGR(sf2, dsn = "/Users/Nick/Desktop/sf_neighborhoods", layer="sf_incomes", driver="ESRI Shapefile")
writeOGR(sf2, dsn = "/Users/Nick/Desktop/sf", layer="sf_incomes", driver="ESRI Shapefile")
sf3<-readOGR(dsn = "/Users/Nick/Desktop/sf", layer="sf_incomes")
plot(sf3)
sf3@data
readOGR(dsn = "sf", layer = "sf_incomes")
setwd(/users/nick/documents/polgeo/gis_in_r)
setwd("/users/nick/documents/polgeo/gis_in_r")
sf <-readOGR(dsn = "sf", layer = "sf_incomes")
summary(sf)
class(sf)
str(sf, max.level=2)
names(sf)
head(sf@data)
sf[sf$MdIncHH > 40000,]
spplot(sf, "MedIncHH")
spplot(sf, "MdIncHH")
dem.r <- raster("sf/sanfrancisconorth.dem")
plot(dem.r)
df <- data.frame(attr1 = LETTERS[1:10], attr2 = c(10:1))
df
plot(xy.spdf[where(xy.spdf$attr2>5)]
)
plot(xy.spdf[which(xy.spdf$attr2>5))]    # column with "attr2" only
plot(xy.spdf[which(xy.spdf$attr2>5)])
xy.spdf@data
plot(xy.spdf[where(xy.spdf$attr2>5)])    # column with "attr2" only
plot(xy.spdf[which(xy.spdf$attr2>5)])    # column with "attr2" only
plot(xy.spdf[which(xy.spdf$attr2>5)],)
plot(xy.spdf[which(xy.spdf@data$attr2>5)],)
which(xy.spdf@data$attr2>5)
plot(xy.spdf[which(xy.spdf@data$attr2>5),])    # column with "attr2" only
plot(xy.spdf[which(xy.spdf$attr2>5),])    # column with "attr2" only
read.csv('sf/sf_restaurant_inspections.csv')
read.csv('sf/businesses_plus.csv')
read.csv('sf/businesses_plus.csv')[c('latitude', 'longitude')]
read.csv('sf/businesses_plus.csv')[c('latitude', 'longitude', 'business_id')]
b <- read.csv('sf/businesses_plus.csv')[c('latitude', 'longitude', 'business_id', 'name')]
sf.df
r<- read.csv('sf/sf_restaurant_inspections.csv')
r
r.head()
r<- r[c('business_id', 'Score', 'date')]
r
r<- sort(r, 'date')
r<- sort(r, date)
?sort
r<- order(r, 'date')
?order
r<- r[order(date),]
r<- r[order(r$date),]
r
r<- r[order(c(r$business_id, r$date),]
r<- r[order(c("r$business_id", "r$date"),]
r<- r[order(r$business_id, r$date),]
r
r<- r[order(r$business_id, r$date,decreasing=True),]
r<- r[order(r$business_id, r$date,decreasing=TRUE),]
r
r2 <- aggregate(r, list(r$business_id), FUN=head, 1)
?merge
library(dplyr)
inner_join(r2,4, by='business_id')
inner_join(r2,b, by='business_id')
write.csv('sf/restaurant_ratings.csv')
z <- inner_join(r2,b, by='business_id')
write.csv(z,'sf/restaurant_ratings.csv')
r<- r[order(r$business_id, r$date,decreasing=TRUE),]
r<-r[complete.cases(r),]
r
r2 <- aggregate(r, list(r$business_id), FUN=head, 1)
inner_join(r2,b, by='business_id')
write.csv(z,'sf/sf_restaurant_ratings.csv')
read.csv('sf/sf_restaurant_ratings.csv')
sf.df<- read.csv('sf/sf_restaurant_ratings.csv')
head(sf.df)
class(sf.df)
coordinates(sf.df) <-c("longitude", "latitude")
sf.df<- read.csv('sf/sf_restaurant_ratings.csv')
sf.df
sf.df<- sf.df[complete.cases(df.df),]
sf.df<- sf.df[complete.cases(sf.df),]
coordinates(sf.df) <-c("longitude", "latitude")
sf.df
subset(sf.df, select=-'Group.1')
subset(sf.df, select=-"Group.1")
subset(sf.df, select=-Group.1)
zz <- subset(sf.df, select=-Group.1)
write.csv(zz, "sf/sf_restaurant_inspections.csv")
read.table("sf/sf_restaurant_inspections.csv")
read.csv("sf/sf_restaurant_inspections.csv")
zz <- subset(sf.df, select=-c(Group.1, X.1,X))
zz
head(zz)
sf.df<- read.csv('sf/sf_restaurant_ratings.csv')
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
sf.df
summary(sf.df)
zz <- subset(sf.df, select=-c(X.1,X, optional, date))
zz
write.csv(zz, "sf/sf_restaurant_inspections.csv")
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
sf.df
coordinates(sf.df) <-c("longitude", "latitude")
class(sf.df)
plot(sf.df)
summary(sf.df)
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
sf.df
sf.df <- sf.df[which(sf.df$latitude>35 & sf.df$longitude < 121),]
sf.df
zz <- subset(sf.df, select=-c(X))
write.csv(zz, "sf/sf_restaurant_inspections.csv")
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
coordinates(sf.df) <-c("longitude", "latitude")
plot(sf.df)
zz <- zz[which(zz$longitude < 122),]
write.csv(zz, "sf/sf_restaurant_inspections.csv")
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
coordinates(sf.df) <-c("longitude", "latitude")
plot(sf.df)
zz <- zz[which(zz$longitude < -122),]
write.csv(zz, "sf/sf_restaurant_inspections.csv")
sf.df<- read.csv('sf/sf_restaurant_inspections.csv')
coordinates(sf.df) <-c("longitude", "latitude")
plot(sf.df)
sf.df@data
bubble(ph.df, "Score")
bubble(sf.df, "Score")
sf.df[which(sd.df$Score<75),]
sf.df[]
sf.df[which(sf.df$Score<75),]
plot(sf.df[which(sf.df$Score<75),])
Sr1 <-  Polygon(cbind(c(2,4,4,1,2),c(2,3,5,4,2)))
Sr2 <-  Polygon(cbind(c(5,4,2,5),c(2,3,2,2)))
Sr3 <-  Polygon(cbind(c(4,4,5,10,4),c(5,3,2,5,5)))
Sr4 <-  Polygon(cbind(c(5,6,6,5,5),c(4,4,3,3,4)), hole = TRUE)
Srs1 <-  Polygons(list(Sr1), "s1")
Srs2 <-  Polygons(list(Sr2), "s2")
Srs3 <-  Polygons(list(Sr3, Sr4), "s3/4")
SpP <-  SpatialPolygons(list(Srs1,Srs2,Srs3), 1:3)
plot(SpP)
summary(SpP)
attr <- data.frame(attr1=1:3, attr2=3:1, row.names=c("s3/4", "s2", "s1"))
attr
attr <- data.frame(attr1=1:3, attr2=3:1, row.names=c("s3/4", "s2", "s1"))
SrDf <- SpatialPolygonsDataFrame(SpP, attr)
spplot(SrDf)
?SpatialPolygonsDataFrame
str(SrDf)
SrDf@bbox
SrDf@data
